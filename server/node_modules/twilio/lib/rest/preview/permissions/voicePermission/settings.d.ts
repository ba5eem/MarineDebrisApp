/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Permissions = require('../../Permissions');
import Response = require('../../../../http/response');
import serialize = require('../../../../base/serialize');
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the SettingsList
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 */
declare function SettingsList(version: Permissions): SettingsListInstance;

/**
 * Options to pass to update
 *
 * @property inheritance - Set true to enable inheritance voice permissions settings, false to disable
 */
interface SettingsInstanceUpdateOptions {
  inheritance?: boolean;
}

interface SettingsListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): SettingsContext;
  /**
   * Constructs a settings
   */
  get(): SettingsContext;
}

interface SettingsPayload extends SettingsResource, Page.TwilioResponsePayload {
}

interface SettingsResource {
  inheritance: boolean;
  url: string;
}

interface SettingsSolution {
}


declare class SettingsContext {
  /**
   * Initialize the SettingsContextPLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   */
  constructor(version: Permissions);

  /**
   * fetch a SettingsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: SettingsInstance) => any): Promise<SettingsInstance>;
  /**
   * update a SettingsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts?: SettingsInstanceUpdateOptions, callback?: (error: Error | null, items: SettingsInstance) => any): Promise<SettingsInstance>;
}


declare class SettingsInstance extends SerializableClass {
  /**
   * Initialize the SettingsContextPLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property inheritance - The status of  inheritance of outbound voice permissions and blocklist
   * @property url - The url
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   */
  constructor(version: Permissions, payload: SettingsPayload);

  private _proxy: SettingsContext;
  /**
   * fetch a SettingsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: SettingsInstance) => any): void;
  inheritance: boolean;
  /**
   * Produce a plain JSON object version of the SettingsInstance for serialization.
   * Removes any circular references in the object.
   */
  toJSON(): any;
  /**
   * update a SettingsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts?: SettingsInstanceUpdateOptions, callback?: (error: Error | null, items: SettingsInstance) => any): void;
  url: string;
}


declare class SettingsPage extends Page<Permissions, SettingsPayload, SettingsResource, SettingsInstance> {
  /**
   * Initialize the SettingsPagePLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Permissions, response: Response<string>, solution: SettingsSolution);

  /**
   * Build an instance of SettingsInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: SettingsPayload): SettingsInstance;
}

export { SettingsContext, SettingsInstance, SettingsList, SettingsListInstance, SettingsPage, SettingsPayload, SettingsResource, SettingsSolution }
